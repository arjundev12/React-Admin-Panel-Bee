{"version":3,"sources":["constant.js","views/pagination/pagination.js","views/Transactions/transactions.js"],"names":["baseUrl","Pagination","showPerPage","onPaginationChange","total","page","useState","counter","setCounter","numberOfButtons","setNumberOfButoons","console","log","useEffect","Math","ceil","onButtonClick","type","className","aria-label","class","onClick","Array","fill","map","el","index","Transactions","useHistory","setTotal","setPage","setIndex","filters","setFilters","transactions","setTransactions","search","setSearch","useParams","id","loadData","a","data","limit","Object","keys","length","constructor","sort","toId","text","axios","post","CONSTANT","res","warn","code","toast","docs","onInputChange","e","createdAt","onInputChange1","target","name","value","to","alignRight","title","onSelect","Item","eventKey","placeholder","onChange","striped","bordered","hover","item","i","transaction_type","amount","status","start","end"],"mappings":"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","file":"static/js/17.95d0d149.chunk.js","sourcesContent":["export const baseUrl  = \"http://3.12.65.48:3001\"\r\n// export const baseUrl  = \"http://localhost:3001\"\r\n// export const img_url = \"http://localhost:3001\"\r\nexport const img_url = \"http://3.12.65.48:3001\"\r\nexport const CONSTANT_NUMBER_2 = 'hello I am also a constant';","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Table } from 'react-bootstrap'\r\nconst Pagination = ({ showPerPage, onPaginationChange, total,page }) => {\r\n  const [counter, setCounter] = useState(page);\r\n  const [numberOfButtons, setNumberOfButoons] = useState(\r\n  );\r\n\r\n console.log(\"numberOfButtons\",numberOfButtons )\r\n console.log(\"total\",total )\r\n console.log(\"counter\",counter )\r\n console.log(\"showPerPage\",showPerPage )\r\n  useEffect(() => {\r\n    const value = showPerPage * counter;\r\n    onPaginationChange(counter, value - showPerPage);\r\n    setNumberOfButoons(Math.ceil(total / showPerPage))\r\n  }, [counter]);\r\n\r\n  const onButtonClick = (type) => {\r\n    if (type === \"prev\") {\r\n      if (counter === 1) {\r\n        setCounter(1);\r\n      } else {\r\n        setCounter(counter - 1);\r\n      }\r\n    } else if (type === \"next\") {\r\n      if (numberOfButtons === counter) {\r\n        setCounter(counter);\r\n      } else {\r\n        setCounter(counter + 1);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul class=\"pagination\">\r\n          <li class=\"page-item\">\r\n            <a\r\n              class=\"page-link\"\r\n              // href=\"!#\"\r\n              onClick={() => onButtonClick(\"prev\")}\r\n            >\r\n              Previous\r\n            </a>\r\n          </li>\r\n\r\n          {new Array(numberOfButtons).fill(\"\").map((el, index) => (\r\n            <li class={`page-item ${index + 1 === counter ? \"active\" : null}`}>\r\n              <a\r\n                class=\"page-link\"\r\n                // href=\"!#\"\r\n                onClick={() => setCounter(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </a>\r\n            </li>\r\n          ))}\r\n          <li class=\"page-item\">\r\n            <a\r\n              class=\"page-link\"\r\n              // href=\"!#\"\r\n              onClick={() => onButtonClick(\"next\")}\r\n            >\r\n              Next\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation, Link, useParams } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { Button, Table, DropdownButton, Dropdown } from 'react-bootstrap'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport *as  CONSTANT from '../../constant'\r\nimport Pagination from '../pagination/pagination'\r\n\r\nimport '../../css/style.css'\r\n\r\n\r\n\r\n\r\nconst Transactions = () => {\r\n    const history = useHistory()\r\n    //////////////////////////////////pagination/////////////////////////////////////\r\n    const [showPerPage, setShowPerPage] = useState(5);\r\n    const [total, setTotal] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [index, setIndex] = useState(1);\r\n    const [filters, setFilters] = useState({})\r\n\r\n    const onPaginationChange = (start, end) => {\r\n        console.warn(\"getee, \", start, end)\r\n        setPage(start)\r\n        setIndex(end)\r\n    };\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [search, setSearch] = useState({});\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        loadData(page, filters);\r\n\r\n    }, [page, total, filters ,search]);\r\n    const loadData = async (page, filters = null) => {\r\n        const data = {\r\n            page: page,\r\n            limit: 5\r\n        }\r\n\r\n        if (!(Object.keys(filters).length === 0 && filters.constructor === Object)) {\r\n            data.sort = filters\r\n        }\r\n        if (!(Object.keys(search).length === 0 && search.constructor === Object)) {\r\n            data.toId = search.text\r\n        }   \r\n        console.log(\"datadata\", data)\r\n        const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/get-transaction`, data);\r\n        console.warn(res.data.data)\r\n        if (res.data.code == 200) {\r\n            toast(\"List get successfully\")\r\n            setTransactions(res.data.data.docs);\r\n            await setTotal(res.data.data.total)\r\n        }\r\n\r\n    };\r\n    const detailsView = async (item) => {\r\n        console.warn(\"inside handle click\", item)\r\n        // history.push(`/user/${item._id}  `)\r\n    }\r\n    const onInputChange = async (e) => {\r\n        console.log(\"targat\", e)\r\n        let filter = {}\r\n        if (e == 'option-1') {\r\n            setFilters({ ...filters, createdAt: -1 })\r\n        }\r\n        if (e == 'option-2') {\r\n            setFilters({ ...filters, createdAt: 1 })\r\n        }\r\n        // if(e == 'option-3' ){\r\n        //     setFilters({ ...filters, transaction_type: 1 })\r\n        // }\r\n        // if(e == 'option-4' ){\r\n        //     setFilters({ ...filters, type: 1 })\r\n        // }\r\n\r\n    };\r\n    const onInputChange1 = async (e)=>{\r\n        console.log(\"search text\", e.target.name, e.target.value )\r\n        setSearch({ ...search, [e.target.name]: e.target.value });\r\n    }\r\n    return (\r\n        <div>\r\n            <Link className=\"btn btn-primary\" to=\"/\">\r\n                back to Home\r\n       </Link>\r\n            <DropdownButton className='fltR' alignRight\r\n                title=\"filter\"\r\n                id=\"dropdown-menu-align-right\"\r\n\r\n                onSelect={e => onInputChange(e)}>\r\n                <Dropdown.Item eventKey=\"option-1\">New transactions</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"option-2\">Old transaction</Dropdown.Item>\r\n            </DropdownButton>\r\n            <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"searchBox\"\r\n                        placeholder=\"search here....\"\r\n                        name=\"text\"\r\n                        value={search.text}\r\n                        onChange={e => onInputChange1(e)}\r\n                    />\r\n            </div>\r\n\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>S.no</th>\r\n                        <th>transaction_type</th>\r\n                        <th>type</th>\r\n                        <th>amount</th>\r\n                        {/* <th>Minner Status</th> */}\r\n                        <th>Status</th>\r\n                        {/* <th>Actions</th> */}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        transactions.map((item, i) => <tr>\r\n                            <td>{i + index + 1}</td>\r\n                            <td>{item.transaction_type}</td>\r\n                            <td>{item.type}</td>\r\n                            <td>{item.amount}</td>\r\n                            <td>{item.status}</td>\r\n                            {/* <td>{item.minner_Activity + \"\"}</td> */}\r\n                            {/* <td>\r\n                                <select class=\"form-control\" name=\"minner_Activity\" value={item.minner_Activity}\r\n                                    onChange={e => onInputChange(e, item)}>\r\n                                    <option value= {true} >Active</option>\r\n                                    <option value={false}>Inactive</option>\r\n                                </select></td> */}\r\n                            {/* <td><Link className=\"btn btn-primary mr-2 \" to={`/user/${item._id}`}>view </Link>\r\n                                <Link className=\"btn btn-primary mr-2\" to={`/user/edit/${item._id}`}> edit </Link>\r\n                                </td> */}\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            <ToastContainer />\r\n            <Pagination\r\n                showPerPage={showPerPage}\r\n                onPaginationChange={onPaginationChange}\r\n                total={total}\r\n                page={page}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transactions\r\n"],"sourceRoot":""}