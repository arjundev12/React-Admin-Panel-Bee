{"version":3,"sources":["constant.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","views/charts/ChartLineSimple.js","views/charts/ChartBarSimple.js","views/widgets/WidgetsDropdown.js"],"names":["baseUrl","img_url","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","e","_e","f","TypeError","normalCompletion","didErr","step","next","_e2","ChartLineSimple","props","borderColor","backgroundColor","pointHoverBackgroundColor","dataPoints","label","pointed","attributes","pointHoverColor","defaultDatasets","data","getColor","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","options","Object","assign","maintainAspectRatio","legend","computedDatasets","deepObjectsMerge","datasets","computedOptions","labels","defaultProps","ChartBarSimple","barPercentage","categoryPercentage","WidgetsDropdown","useState","total","setTotal","allTotal","totalCount","headers","localStorage","getItem","useEffect","getdata","id","a","axios","get","CONSTANT","res","console","warn","code","toast","item","COUNT","map","sm","lg","header","text","_id","block_user","minner_Activity","footerSlot","className","style","height"],"mappings":"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","file":"static/js/10.432fa120.chunk.js","sourcesContent":["export const baseUrl  = \"http://3.12.65.48:3001\"\r\n// export const baseUrl  = \"http://localhost:3001\"\r\n// export const img_url = \"http://localhost:3001/\"\r\nexport const img_url = \"http://3.12.65.48:3001/\"\r\nexport const CONSTANT_NUMBER_2 = 'hello I am also a constant';","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor, deepObjectsMerge } from '@coreui/utils'\nimport { CChartLine } from '@coreui/react-chartjs'\n\nconst ChartLineSimple = props => {\n\n  const {\n    borderColor,\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    ...attributes\n  } = props\n\n  const pointHoverColor = (()=>{\n    if (pointHoverBackgroundColor) {\n      return pointHoverBackgroundColor\n    } else if (backgroundColor !== 'transparent') {\n      return backgroundColor\n    }\n    return borderColor\n  })()\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        data: dataPoints,\n        borderColor: getColor(borderColor),\n        backgroundColor: getColor(backgroundColor),\n        pointBackgroundColor: getColor(pointHoverColor),\n        pointHoverBackgroundColor: getColor(pointHoverColor),\n        label\n      }\n    ]\n  })()\n\n  const pointedOptions = (()=>{\n    return {\n      scales: {\n        xAxes: [\n          {\n            offset: true,\n            gridLines: {\n              color: 'transparent',\n              zeroLineColor: 'transparent'\n            },\n            ticks: {\n              fontSize: 2,\n              fontColor: 'transparent'\n            }\n          }\n        ],\n        yAxes: [\n          {\n            display: false,\n            ticks: {\n              display: false,\n              min: Math.min.apply(Math, dataPoints) - 5,\n              max: Math.max.apply(Math, dataPoints) + 5\n            }\n          }\n        ]\n      },\n      elements: {\n        line: {\n          borderWidth: 1\n        },\n        point: {\n          radius: 4,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    }\n  })()\n\n  const straightOptions = (()=>{\n    return {\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      },\n      elements: {\n        line: {\n          borderWidth: 2\n        },\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    }\n  })()\n\n  const defaultOptions = (()=>{\n    const options = pointed ? pointedOptions : straightOptions\n      return Object.assign({}, options, {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        }\n      })\n  })()\n\n  const computedDatasets = (() => {\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\n  })()\n\n  const computedOptions = (() => {\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\n  })()\n\n  // render\n\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={computedDatasets}\n      options={computedOptions}\n      labels={label}\n    />\n  )\n}\n\nChartLineSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\n\nChartLineSimple.defaultProps = {\n  borderColor: 'rgba(255,255,255,.55)',\n  backgroundColor: 'transparent',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\n\nexport default ChartLineSimple\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor } from '@coreui/utils'\nimport { CChartBar } from '@coreui/react-chartjs'\n\nconst ChartBarSimple = props => {\n\n  const {\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    ...attributes\n  } = props\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        data: dataPoints,\n        backgroundColor: getColor(backgroundColor),\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\n        label: label,\n        barPercentage: 0.5,\n        categoryPercentage: 1\n      }\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      }\n    }\n  })()\n\n  // render\n  return (\n    <CChartBar\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={label}\n    />\n  )\n}\n\nChartBarSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\n\nChartBarSimple.defaultProps = {\n  backgroundColor: 'rgba(0,0,0,.2)',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\n\nexport default ChartBarSimple\n","import React, { useState, useEffect } from 'react'\nimport {\n  CWidgetDropdown,\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle\n} from '@coreui/react'\nimport axios from \"axios\";\nimport *as  CONSTANT from '../../constant'\nimport CIcon from '@coreui/icons-react'\nimport ChartLineSimple from '../charts/ChartLineSimple'\nimport ChartBarSimple from '../charts/ChartBarSimple'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst WidgetsDropdown = () => {\n  const [total, setTotal] = useState([]);\n  const [totalCount, setTotalCount] = useState({\n    allTotal :0\n  });\n  const options = {\n    headers: {'token': localStorage.getItem('token')}\n  };\n  const color =[\"gradient-primary\",\"gradient-info\", \"gradient-primary\"]\n  useEffect(() => {\n    getdata()\n  }, []);\n\n  const getdata = async (id) => {\n    const res = await axios.get(`${CONSTANT.baseUrl}/api/admin/get-total`, options);\n    console.warn(\"response\", res.data)\n    if (res.data.code != 200) {\n      toast(\"Somethig went wrong\");\n    } else {\n      toast(\"Get successfully\");\n      for (const item of res.data.data) {\n        totalCount.allTotal += item.COUNT\n      }\n      setTotal(res.data.data);\n    }\n  }\n\n  // render\n  return (\n    <>\n      <CRow>\n        {\n          total.map((item, i) => <CCol sm=\"6\" lg=\"3\">\n            <CWidgetDropdown \n              color={color[i]}\n              header={item.COUNT}\n              text={item._id.block_user== 1 ? \"Block Users\": item._id.minner_Activity == true? \"Online Users\" : \"Ofline Users\" }\n              footerSlot={\n                <ChartLineSimple\n                  pointed\n                  className=\"c-chart-wrapper mt-3 mx-3\"\n                  style={{ height: '70px' }}\n                  dataPoints={[65, 59, 84, 84, 51, 55, 40]}\n                  pointHoverBackgroundColor=\"primary\"\n                  label=\"Members\"\n                  labels=\"months\"\n                />\n                \n              }\n              \n            >\n            </CWidgetDropdown>\n          </CCol>\n          )\n        }\n         <CCol sm=\"6\" lg=\"3\">\n            <CWidgetDropdown\n              color={color[1]}\n              header={totalCount.allTotal}\n              text={\"Total Users\" }\n              footerSlot={\n                <ChartLineSimple\n                  pointed\n                  className=\"c-chart-wrapper mt-3 mx-3\"\n                  style={{ height: '70px' }}\n                  dataPoints={[65, 59, 84, 84, 51, 55, 40]}\n                  pointHoverBackgroundColor=\"primary\"\n                  label=\"Members\"\n                  labels=\"months\"\n                />\n              }\n            >\n            </CWidgetDropdown>\n          </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default WidgetsDropdown\n"],"sourceRoot":""}