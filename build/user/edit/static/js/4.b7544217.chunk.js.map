{"version":3,"sources":["constant.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/pages/login/Login.js"],"names":["baseUrl","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","withRouter","props","useState","email","setEmail","password","setPassword","allEntry","setAllEntry","history","useHistory","submitForm","e","a","preventDefault","newEntry","axios","post","CONSTANT","res","console","warn","data","code","toast","localStorage","setItem","setTimeout","push","className","md","action","onSubmit","name","type","placeholder","autoComplete","value","onChange","target","xs","color"],"mappings":"4KAAA,kCAAO,IAAMA,EAAW,0B,0GCIT,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,mHImG9EC,uBAhFF,SAACC,GAAW,IAAD,EACGC,mBAAS,IADZ,mBAChBC,EADgB,KACTC,EADS,OAESF,mBAAS,IAFlB,mBAEhBG,EAFgB,KAENC,EAFM,OAGSJ,mBAAS,IAHlB,mBAGhBK,EAHgB,KAGNC,EAHM,KAIjBC,EAAUC,cACVC,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACjBD,EAAEE,iBACIC,EAAW,CAAEZ,MAAOA,EAAOE,SAAUA,GAC3CG,EAAY,GAAD,SAAKD,GAAL,CAAeQ,KAHT,SAICC,IAAMC,KAAN,UAAcC,IAAd,oBAAkDH,GAJnD,OAIXI,EAJW,OAKjBC,QAAQC,KAAKF,EAAIG,MACI,KAAjBH,EAAIG,KAAKC,OACXC,YAAM,oBACNC,aAAaC,QAAQ,QAAQ,GAC7BC,YAAW,WAAWlB,EAAQmB,KAAK,OAAS,MAG9CR,QAAQC,KAAKd,GAZI,2CAAH,sDAchB,OACE,sBAAKsB,UAAU,qDAAf,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOD,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOE,OAAO,GAAGC,SAAUrB,EAA3B,UACE,uCACA,mBAAGkB,UAAU,aAAb,qCACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOI,KAAK,iBAGhB,cAAC,IAAD,CAAQC,KAAK,OAAOC,YAAY,WAAWC,aAAa,WACvDC,MAAOlC,EAAOmC,SAAU,SAAC1B,GAAD,OAAOR,EAASQ,EAAE2B,OAAOF,aAEpD,eAAC,IAAD,CAAaR,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOI,KAAK,wBAGhB,cAAC,IAAD,CAAQC,KAAK,WAAWC,YAAY,WAAWC,aAAa,mBAC3DC,MAAOhC,EAAUiC,SAAU,SAAC1B,GAAD,OAAON,EAAYM,EAAE2B,OAAOF,aAE1D,eAAC,IAAD,WACE,cAAC,IAAD,CAAMG,GAAG,IAAT,SACE,cAAC,IAAD,CAASC,MAAM,UAAUZ,UAAU,OAAQK,KAAK,SAAhD,qBAEF,cAAC,IAAD,CAAMM,GAAG,IAAIX,UAAU,aAAvB,SACE,cAAC,IAAD,CAASY,MAAM,OAAOZ,UAAU,OAAhC,kDAsBrB,cAAC,IAAD","file":"static/js/4.b7544217.chunk.js","sourcesContent":["export const baseUrl  = \"http://3.12.65.48:3001\"\r\n// export const baseUrl  = \"http://localhost:3001\"\r\n// export const img_url = \"http://localhost:3001\"\r\nexport const img_url = \"http://3.12.65.48:3001\"\r\nexport const CONSTANT_NUMBER_2 = 'hello I am also a constant';","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react'\nimport { Link, useHistory, Redirect } from 'react-router-dom'\nimport { withRouter } from \"react-router\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport navigation from '../../../containers/_nav'\nimport *as  CONSTANT  from '../../../constant'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst Login = (props) => {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [allEntry, setAllEntry] = useState([])\n  const history = useHistory();\n  const submitForm = async (e) => {\n    e.preventDefault()\n    const newEntry = { email: email, password: password }\n    setAllEntry([...allEntry, newEntry])\n    const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/login`, newEntry);\n    console.warn(res.data)\n    if (res.data.code == 200) {\n      toast(\"Get successfully\");\n      localStorage.setItem('Auth', true);\n      setTimeout(function(){history.push('/'); }, 1000);\n      \n    }\n    console.warn(allEntry)\n  }\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm action=\"\" onSubmit={submitForm}>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"text\" placeholder=\"Username\" autoComplete=\"username\"\n                       value={email} onChange={(e) => setEmail(e.target.value)} />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" \n                       value={password} onChange={(e) => setPassword(e.target.value)}/>\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton color=\"primary\" className=\"px-4\"  type=\"submit\">Login</CButton>\n                      </CCol>\n                      <CCol xs=\"6\" className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              {/* <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                      labore et dolore magna aliqua.</p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard> */}\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n   <ToastContainer/>\n    </div>\n  )\n}\n\nexport default (withRouter(Login))"],"sourceRoot":""}